C51 COMPILER V9.60.7.0   LCD1602                                                           03/20/2024 11:49:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Programing\Keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_RS = P2^6;
   4          sbit LCD_RW = P2^5;
   5          sbit LCD_E = P2^7;
   6          #define LCD_DataPort P0
   7          
   8          void LCD_Delay(void)  //@11.0592MHz
   9          {
  10   1        unsigned char data i, j;
  11   1      
  12   1        i = 12;
  13   1        j = 169;
  14   1        do
  15   1        {
  16   2          while (--j);
  17   2        } while (--i);
  18   1      }
  19          
  20          
  21          void LCD_WriteCommand(unsigned char Command)
  22          {
  23   1        LCD_RS = 0;
  24   1        LCD_RW = 0;
  25   1        LCD_DataPort = Command;
  26   1        LCD_E = 1;
  27   1        LCD_Delay();
  28   1        LCD_E = 0;
  29   1        LCD_Delay();
  30   1      }
  31          
  32          void LCD_WriteData(unsigned char Data)
  33          {
  34   1        LCD_RS = 1;
  35   1        LCD_RW = 0;
  36   1        LCD_DataPort = Data;
  37   1        LCD_E = 1;
  38   1        LCD_Delay();
  39   1        LCD_E = 0;
  40   1        LCD_Delay();
  41   1      }
  42          
  43          void LCD_Init()
  44          {
  45   1        LCD_WriteCommand(0x38);
  46   1        LCD_WriteCommand(0x0C);
  47   1        LCD_WriteCommand(0x06);
  48   1        LCD_WriteCommand(0x01);
  49   1      }
  50          
  51          void LCD_SetCursor(unsigned char row,unsigned char col)
  52          {
  53   1        if(row == 1)
  54   1          LCD_WriteCommand(0x80|(col - 1));
C51 COMPILER V9.60.7.0   LCD1602                                                           03/20/2024 11:49:00 PAGE 2   

  55   1        else
  56   1          LCD_WriteCommand(0x80|(col - 1)+0x40);
  57   1      }
  58          
  59          void LCD_MoveCursor(unsigned char direction)
  60          {
  61   1        if(direction > 0)
  62   1          LCD_WriteCommand(0x18);//右移
  63   1        else
  64   1          LCD_WriteCommand(0x1C);//左移
  65   1      }
  66          
  67          void LCD_ShowChar(unsigned char row,unsigned char col,unsigned char C)
  68          {
  69   1        LCD_SetCursor(row,col);
  70   1        LCD_WriteData(C);
  71   1      } 
  72          
  73          void LCD_ShowString(unsigned char row,unsigned char col,unsigned char* Str)
  74          {
  75   1        unsigned char i;
  76   1        LCD_SetCursor(row,col);
  77   1        for(i = 0; Str[i] != '\0';i++)
  78   1          LCD_WriteData(Str[i]);
  79   1      }
  80          
  81          int LCD_Pow(int X,unsigned int Y)
  82          {
  83   1        unsigned char i;
  84   1        int result = 1;
  85   1        for(i = 0; i < Y; i++)
  86   1          result *= X;
  87   1        return result;
  88   1      }
  89          
  90          void LCD_ShowNum(unsigned char row,unsigned char col,unsigned int num,unsigned char len)
  91          {
  92   1        unsigned char i;
  93   1        LCD_SetCursor(row,col);
  94   1        for(i = len; i > 0; i--)
  95   1          LCD_WriteData('0'+(num / LCD_Pow(10,i-1)) % 10);
  96   1      
  97   1      }
  98          void LCD_ShowSignedNum(unsigned char row,unsigned char col,int num,unsigned char len)
  99          {
 100   1        unsigned char i;
 101   1        unsigned int numTmp;//为了防止-32768显示不出来
 102   1        LCD_SetCursor(row,col);
 103   1        if(num >= 0)
 104   1        {
 105   2          LCD_WriteData('+');
 106   2          numTmp = num;
 107   2        }
 108   1        else
 109   1        {
 110   2          LCD_WriteData('-');
 111   2          numTmp = -num;
 112   2        }
 113   1        for(i = len; i > 0; i--)
 114   1          LCD_WriteData('0'+(numTmp/ LCD_Pow(10,i-1)) % 10);
 115   1        
 116   1      }
C51 COMPILER V9.60.7.0   LCD1602                                                           03/20/2024 11:49:00 PAGE 3   

 117          
 118          void LCD_ShowHexNum(unsigned char row,unsigned char col,unsigned char num,unsigned char len)
 119          {
 120   1        unsigned char i;
 121   1        unsigned char SingleNum;
 122   1        LCD_SetCursor(row,col);
 123   1        for(i = len; i > 0; i--)
 124   1        {
 125   2          SingleNum = (num / LCD_Pow(16,i-1)) % 16;
 126   2          if(SingleNum < 10)
 127   2            LCD_WriteData('0'+ SingleNum);
 128   2          else
 129   2            LCD_WriteData('A'+ SingleNum - 10);
 130   2        
 131   2        }
 132   1      }
 133          
 134          void LCD_ShowBinNum(unsigned char row,unsigned char col,unsigned char num,unsigned char len)
 135          {
 136   1        unsigned char i;
 137   1        unsigned char SingleNum;
 138   1        LCD_SetCursor(row,col);
 139   1        for(i = len; i > 0; i--)
 140   1          LCD_WriteData('0'+(num / LCD_Pow(2,i-1))  % 2);
 141   1      }
*** WARNING C280 IN LINE 137 OF LCD1602.c: 'SingleNum': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
